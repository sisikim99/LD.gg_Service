<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ld.gg.dao.PaymentDao">

	<select id="getUserInfo" parameterType = "java.lang.String" resultType = "member">
		SELECT email, phone_num, lol_account FROM member WHERE email = #{email}
	</select>
	
	<select id="checkOrderId" parameterType = "java.lang.String" resultType = "java.lang.String">
		SELECT merchant_id FROM paymentinfo WHERE merchant_id = #{orderId}
	</select>
	
	<insert id="insertPaymentInfo" parameterType = "Map">
		INSERT INTO paymentinfo (imp_uid, merchant_id, price, email, lol_account, phone_num, payment_status, payment_method)
  		VALUES (#{imp_uid}, #{merchant_uid}, #{price}, #{email}, #{lol_account}, #{phone_num}, #{payment_status}, #{payment_method})
	</insert>
	
	<select id="getPaymentInfo" parameterType = "java.lang.String" resultType = "point">
		SELECT DISTINCT p.point_balance, pi.lol_account FROM paymentinfo pi JOIN point p ON pi.email = p.holder_email WHERE p.holder_email = #{email}
	</select>
	
	<select id="checkBalance" parameterType = "java.lang.String" resultType = "int">
		SELECT point_balance FROM point WHERE holder_email = #{email} 
	</select>
	
	<update id="updateBalance" parameterType = "Map">
		UPDATE point SET point_balance = #{point} WHERE holder_email = #{email}
	</update>
	
	<update id="updatePayBalance" parameterType = "Map">
		UPDATE POINT SET point_balance = #{point} - #{price} WHERE holder_email = #{holder_email}
	</update>
	
	<select id="checkMentoringApplication" resultType = "Integer">
		SELECT point_balance FROM point WHERE holder_email = #{holder_email}
	</select>
	
	<select id="getInfoForPayment" resultType = "member">
		SELECT email, lol_account, phone_num FROM member WHERE email = #{email}
	</select>
	
	<insert id="insert_tx_history" parameterType = "tx">
		INSERT INTO transaction_history (points_sent, points_received, sender_id, receiver_id) 
		VALUES (#{points_sent}, #{points_received}, #{sender_id}, #{receiver_id});
	</insert>
	
	<update id="updateTrade" parameterType = "tx">
		UPDATE POINT SET point_balance = point_balance + #{points_received} WHERE holder_email = #{receiver_id}
	</update>
	
	<insert id="insert_point_0" parameterType="String">
	  INSERT INTO point (holder_email) VALUES (#{holder_email});
	</insert>
	
	<insert id="renewal_point_0">
	  INSERT INTO point (holder_email)
	  SELECT email FROM member
	  WHERE NOT EXISTS(
	  SELECT 1 FROM point WHERE point.holder_email = member.email);
	</insert>
	
	<select id="getBalance" resultType = "point">
		select point_balance, holder_email from point where holder_email = #{email}
	</select>
	
	<select id="getCharge" resultType = "usage">
		select tx_date, points_sent, points_received, sender_id, receiver_id  from transaction_history where sender_id = #{email} or receiver_id = #{email};
	</select>
	
	<select id="getMerchant" resultType = "usage">
		select price, merchant_id from paymentinfo where email = #{email};
	</select>

</mapper>