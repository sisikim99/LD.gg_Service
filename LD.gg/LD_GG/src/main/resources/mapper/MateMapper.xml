<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ld.gg.dao.MateDao">
	<select id="getMateInfo" resultType="mate">
		SELECT * 
		FROM MATE_POST as MP JOIN (
			SELECT *
			FROM MEMBER) as M
		ON MP.EMAIL = M.EMAIL
		where mate_id =#{mate_id}
		ORDER BY mp.mate_id desc;
	</select>
	<select id="getBoardList" resultType="mate">
		SELECT mp.mate_id ,mp.email ,mp.mate_content ,mp.mate_date,mp.mate_title,m.lol_account  
		FROM MATE_POST as MP JOIN (
			SELECT *
			FROM MEMBER) as M
		ON MP.EMAIL = M.EMAIL
		ORDER BY mp.mate_id desc
	</select>
	<insert id="insertMate" parameterType="mate">
	INSERT INTO mate_post
		(email, mate_title, mate_content,mate_date)
		VALUES(
		#{email},
		#{mate_title},
		#{mate_content},
		default)
	</insert>
	<!-- 글 번호, 제목, 내용, 작성일,작성자, 소환사명, 최근전적(현제 더미값) -->
		<select id="getMateDetails" resultType="mate">
	SELECT
    mp.mate_id,
    mp.email,
    mp.mate_content,
    mp.mate_date,
    mp.mate_title,
    m.lol_account,
    r.win,
    r.loss
		FROM
		    MATE_POST AS mp
		    JOIN (
		        SELECT *
		        FROM member
		    ) AS m ON mp.email = m.email
		    JOIN member_last_rank_20_result AS r ON m.email = r.email
		where mate_id =#{mate_id}
	</select>
	<insert id="mateReplyInsert" parameterType="mate">
	INSERT INTO mate_request
		(mate_apply, mate_id,email,mate_r_content,mate_r_date)
		VALUES(
		#{mate_apply},
		#{mate_id},
		#{email},
		#{mate_r_content},
		default)
	</insert>
	<select id="getReplyInfo" resultType="mate">
		SELECT lol_account,mate_r_content,mate_r_date,mate_apply,mate_id,mate_r_id,mr.mate_apply
		FROM mate_request mr JOIN (
			SELECT *
			FROM member
			) as M
		ON mr.mate_apply = M.EMAIL
		where mate_id =#{mate_id} and mate_r_id = #{mate_r_id}
		ORDER BY mr.mate_r_id desc
	</select>
	<select id="getReplyList" resultType="mate">
   SELECT
    m.lol_account,
    mr.mate_r_content,
    mr.mate_r_date,
    mr.mate_apply,
    mr.mate_id,
    mr.mate_r_id,
    mr.email,
    mr.mate_select,
    r.win,
    r.loss
		FROM
		    mate_request AS mr
		    JOIN (
		        SELECT *
		        FROM member
		    ) AS m ON mr.mate_apply = m.email
		    JOIN member_last_rank_20_result AS r ON m.email = r.email
		WHERE
		    mr.mate_id = #{mate_id}
		ORDER BY
   		mr.mate_r_id DESC
	</select>
	<select id="getReplySelect" resultType="mate">
   SELECT
    m.lol_account,
    mr.mate_r_content,
    mr.mate_r_date,
    mr.mate_apply,
    mr.mate_id,
    mr.mate_r_id,
    mr.email,
    mr.mate_select,
    r.win,
    r.loss
		FROM
		    mate_request AS mr
		    JOIN (
		        SELECT *
		        FROM member
		    ) AS m ON mr.mate_apply = m.email
		    JOIN member_last_rank_20_result AS r ON m.email = r.email
		WHERE
    mr.mate_id = #{mate_id}
    AND mr.mate_select = 1
	</select>
	<select id="getBookmark" resultType="mate">
		select my_page ,mate_page ,tip_page 
		from bookmark
		where email =#{email}
	</select>
	<delete id="mateDelete" parameterType="mate">
		DELETE FROM mate_post WHERE mate_id = #{mate_id}
	</delete>
	
	<delete id="replydelete">
		DELETE FROM mate_request WHERE mate_id = #{mate_id} AND mate_r_id = #{mate_r_id}
	</delete>
	
	<select id="getSearchList" resultType="mate">
		SELECT * FROM mate_post
		WHERE mate_content LIKE CONCAT('%', #{keyword}, '%')
		OR mate_title LIKE
		CONCAT('%', #{keyword}, '%')
		ORDER BY mate_content DESC
	</select>

	<update id="mateModify" parameterType="mate">
		UPDATE MATE_POST SET
		mate_title=#{mate_title},
		mate_content=#{mate_content},
		mate_date=default
		WHERE mate_id =#{mate_id}
	</update>
	<update id="replyMateModify" >
		UPDATE mate_request
		SET mate_select = CASE
			WHEN mate_id = #{mate_id} AND mate_r_id = #{mate_r_id} 
			THEN 1
			ELSE 0
			END
	</update>
	<update id="modifybookmark" >
		UPDATE BOOKMARK
		SET ${bookmark_page} = #{bookmark_val}
		WHERE email = #{email}
	</update>
</mapper>